import { FC } from 'react';
import SpeechRecognition, {
  useSpeechRecognition,
} from 'react-speech-recognition';

type PropsType = {
  transriptedText: (value: string) => void;
};

const VoiceToText: FC<PropsType> = ({ transriptedText }) => {
  const {
    transcript,
    listening,
    resetTranscript,
    browserSupportsSpeechRecognition,
    isMicrophoneAvailable,
  } = useSpeechRecognition();

  const startListening = () => {
    SpeechRecognition.startListening({
      continuous: true,
    });
  };

  const stopListening = () => {
    SpeechRecognition.stopListening();
    transriptedText(transcript);
    handleReset();
  };

  const handleReset = () => {
    resetTranscript();
  };

  if (!browserSupportsSpeechRecognition) {
    return <span>–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏</span>;
  }

  return (
    <>
      <div>
        <h1>
          {!isMicrophoneAvailable && '–ù—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞'}
        </h1>
        <p>–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º</p>
        {listening && <span>–ò–¥–µ—Ç –∑–∞–ø–∏—Å—å: üéô</span>}
        <br />
        {!listening ? (
          <button onClick={startListening}>–ó–∞–ø–∏—Å—å</button>
        ) : (
          <button onClick={stopListening}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        )}
        <button onClick={handleReset}>–°–±—Ä–æ—Å–∏—Ç—å</button>
        <p>{transcript && `–í–∞—à –≤–æ–ø—Ä–æ—Å: ${transcript}`}</p>
      </div>
    </>
  );
};

export default VoiceToText;
